public class MergeSort {
    // Birleştirme fonksiyonu
    void merge(int arr[], int l, int m, int r) {
        // Geçici diziler oluştur
        int n1 = m - l + 1;
        int n2 = r - m;

        int L[] = new int[n1];
        int R[] = new int[n2];

        // Geçici dizilere veri kopyala
        for (int i = 0; i < n1; ++i)
            L[i] = arr[l + i];
        for (int j = 0; j < n2; ++j)
            R[j] = arr[m + 1 + j];

        // Geçici dizileri birleştir
        int i = 0, j = 0;

        int k = l;
        while (i < n1 && j < n2) {
            if (L[i] <= R[j]) {
                arr[k] = L[i];
                i++;
            } else {
                arr[k] = R[j];
                j++;
            }
            k++;
        }

        // Sol tarafta kalan elemanları kopyala
        while (i < n1) {
            arr[k] = L[i];
            i++;
            k++;
        }

        // Sağ tarafta kalan elemanları kopyala
        while (j < n2) {
            arr[k] = R[j];
            j++;
            k++;
        }
    }

    // Birleştirme işlemi için recursive fonksiyon
    void sort(int arr[], int l, int r) {
        if (l < r) {
            // Orta noktayı bul
            int m = (l + r) / 2;

            // İlk yarıyı sırala
            sort(arr, l, m);
            // İkinci yarıyı sırala
            sort(arr, m + 1, r);

            // İki yarımı birleştir
            merge(arr, l, m, r);
        }
    }

    // Sıralama işlemini başlatan ana fonksiyon
    public static void main(String args[]) {
        int arr[] = { 12, 11, 13, 5, 6, 7 };
        System.out.println("Verilmemiş Dizi:");
        for (int i = 0; i < arr.length; ++i)
            System.out.print(arr[i] + " ");
        System.out.println();

        MergeSort ob = new MergeSort();
        ob.sort(arr, 0, arr.length - 1);

        System.out.println("\nSıralanmış Dizi:");
        for (int i = 0; i < arr.length; ++i)
            System.out.print(arr[i] + " ");
        System.out.println();
    }
}
